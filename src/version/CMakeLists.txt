project(template-app-version)

# credit: https://stackoverflow.com/a/21028226/13933174
# the commit's SHA1, and whether the building workspace was dirty or not

# find git executable on system for versioning info
find_package(Git REQUIRED)

# generate version.cpp (into binary dir)
set(VERSION_AUTOGEN_DIR "${CMAKE_CURRENT_BINARY_DIR}") # save in build dir so dont have to gitignore
set(VERSION_SRC_PATH "${CMAKE_CURRENT_SOURCE_DIR}/version.cpp.in")
set(VERSION_DST_PATH "${VERSION_AUTOGEN_DIR}/version.cpp")

# copy file (even if empty) so "add_library" can find ${VERSION_DST_PATH} & build based on it
# executed script later on goes and copies the correct file
configure_file(${VERSION_SRC_PATH} ${VERSION_DST_PATH} @ONLY)

add_library(${PROJECT_NAME}
    ${VERSION_DST_PATH} # autogenerated from version.cpp.in
)

target_include_directories(${PROJECT_NAME}
    PUBLIC public
)

# include created libs from other dirs -- comes after add executable
target_link_libraries(${PROJECT_NAME}
)

target_compile_options(${PROJECT_NAME}
    PRIVATE
)

set_target_properties(${PROJECT_NAME}
    PROPERTIES LINKER_LANGUAGE CXX
)


# make sure this library is rebuilt everytime (and thus version is updated each build, even if no changes)
# https://stackoverflow.com/a/35302833/13933174

# make ${PROJECT_NAME} depend on custom taget
add_dependencies(${PROJECT_NAME}
    ${PROJECT_NAME}_Info_Target
)

# cannot link ${PROJECT_NAME} directly to a add_custom_target
# invalidate target & force rebuild with `add_custom_target`
add_custom_target(${PROJECT_NAME}_Info_Target
    COMMAND ${CMAKE_COMMAND}
        -DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH} # make sure to set cmake path for including
        -DVERSION_SRC_PATH=${VERSION_SRC_PATH} # VERSION_SRC_PATH used in script for copying
        -DVERSION_DST_PATH=${VERSION_DST_PATH} # VERSION_DST_PATH used in script for copying
        -P ${CMAKE_CURRENT_SOURCE_DIR}/config_version.cmake # need to execute script each build
)
